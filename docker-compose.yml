version: '3.8'

services:
  postgres_db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=expense_logger
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - app-network

  backend:
    build: ./backend
    command: sh -c "bash /app/entrypoint.sh"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres_db
    environment:
      - DB_HOST=postgres_db
      - DB_NAME=expense_logger
      - DB_USER=postgres
      - DB_PASSWORD=secret
    restart: always
    networks:
      - app-network
    ports:
      - "8000:8000"  # Expose backend port for direct access if needed

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://backend:8000
      - REACT_APP_ENV=production
      - NODE_ENV=production
    depends_on:
      - backend
    restart: always
    networks:
      - app-network
    ports:
      - "3000:80"  # Map container port 80 to host port 3000

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: