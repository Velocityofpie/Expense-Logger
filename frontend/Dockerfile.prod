# Build stage
FROM node:16-alpine AS build

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json ./
COPY package-lock.json* ./

# Install dependencies
RUN npm install --legacy-peer-deps

# Copy all project files
COPY . .

# Set environment variables for production build
ARG REACT_APP_API_URL
ENV REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
ENV NODE_ENV=production

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Install envsubst
RUN apk add --no-cache bash gettext

# Set up the Nginx configuration as a template
COPY nginx.conf.template /etc/nginx/templates/default.conf.template

# Copy index.html as a template file
COPY --from=build /app/build /usr/share/nginx/html
RUN mv /usr/share/nginx/html/index.html /etc/nginx/templates/index.html.template

# Copy rest of the built files
COPY --from=build /app/build /usr/share/nginx/html

# Expose port 80
EXPOSE 80

# Set default environment variables
ENV REACT_APP_API_URL=http://localhost:8000

# Nginx's default entrypoint will process the templates
# CMD is inherited from the base image